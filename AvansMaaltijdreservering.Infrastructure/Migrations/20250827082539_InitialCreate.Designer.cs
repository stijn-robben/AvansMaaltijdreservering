// <auto-generated />
using System;
using AvansMaaltijdreservering.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvansMaaltijdreservering.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250827082539_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvansMaaltijdreservering.Core.Domain.Entities.Canteen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<bool>("ServesWarmMeals")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Location")
                        .IsUnique();

                    b.ToTable("Canteens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = 0,
                            Location = 0,
                            ServesWarmMeals = true
                        },
                        new
                        {
                            Id = 2,
                            City = 0,
                            Location = 1,
                            ServesWarmMeals = false
                        },
                        new
                        {
                            Id = 3,
                            City = 0,
                            Location = 2,
                            ServesWarmMeals = false
                        },
                        new
                        {
                            Id = 4,
                            City = 2,
                            Location = 3,
                            ServesWarmMeals = true
                        },
                        new
                        {
                            Id = 5,
                            City = 1,
                            Location = 4,
                            ServesWarmMeals = true
                        });
                });

            modelBuilder.Entity("AvansMaaltijdreservering.Core.Domain.Entities.CanteenEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CanteenId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CanteenId");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.ToTable("CanteenEmployees");
                });

            modelBuilder.Entity("AvansMaaltijdreservering.Core.Domain.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CanteenId")
                        .HasColumnType("int");

                    b.Property<int>("CanteenLocation")
                        .HasColumnType("int");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<bool>("Is18Plus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestPickupTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PickupTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ReservedByStudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CanteenId");

                    b.HasIndex("ReservedByStudentId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("AvansMaaltijdreservering.Core.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ContainsAlcohol")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhotoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AvansMaaltijdreservering.Core.Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NoShowCount")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("StudyCity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("StudentNumber")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("PackageProduct", b =>
                {
                    b.Property<int>("PackagesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("PackagesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("PackageProducts", (string)null);
                });

            modelBuilder.Entity("AvansMaaltijdreservering.Core.Domain.Entities.CanteenEmployee", b =>
                {
                    b.HasOne("AvansMaaltijdreservering.Core.Domain.Entities.Canteen", "Canteen")
                        .WithMany("Employees")
                        .HasForeignKey("CanteenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteen");
                });

            modelBuilder.Entity("AvansMaaltijdreservering.Core.Domain.Entities.Package", b =>
                {
                    b.HasOne("AvansMaaltijdreservering.Core.Domain.Entities.Canteen", "Canteen")
                        .WithMany("Packages")
                        .HasForeignKey("CanteenId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AvansMaaltijdreservering.Core.Domain.Entities.Student", "ReservedByStudent")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservedByStudentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Canteen");

                    b.Navigation("ReservedByStudent");
                });

            modelBuilder.Entity("PackageProduct", b =>
                {
                    b.HasOne("AvansMaaltijdreservering.Core.Domain.Entities.Package", null)
                        .WithMany()
                        .HasForeignKey("PackagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvansMaaltijdreservering.Core.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AvansMaaltijdreservering.Core.Domain.Entities.Canteen", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Packages");
                });

            modelBuilder.Entity("AvansMaaltijdreservering.Core.Domain.Entities.Student", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
