  # ASP.NET Core
  # Build and test ASP.NET Core projects targeting .NET Core.
  # Add steps that publish symbols, save build artifacts, and more:
  # https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

  trigger:
  - master

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    solution: '**/*.sln'
    buildConfiguration: 'Release'

  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '9.x'

  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: 'restore'
      projects: '$(solution)'

  - task: DotNetCoreCLI@2
    displayName: 'Build solution'
    inputs:
      command: 'build'
      projects: '$(solution)'
      arguments: '--configuration $(buildConfiguration) --no-restore'

  - task: DotNetCoreCLI@2
    displayName: 'Run tests'
    inputs:
      command: 'test'
      projects: '**/*Tests.csproj'
      arguments: '--configuration $(buildConfiguration) --no-build --collect "Code coverage"'

  - task: DotNetCoreCLI@2
    displayName: 'Install EF Tools'
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'install --global dotnet-ef'

  - task: DotNetCoreCLI@2
    displayName: 'Create EF Bundle'
    inputs:
      command: 'custom'
      custom: 'ef'
      arguments: 'migrations bundle --project **/AvansMaaltijdreservering.Infrastructure.csproj --startup-project
  **/AvansMaaltijdreservering.API.csproj --output $(Build.ArtifactStagingDirectory)/efbundle --configuration
  $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'Publish WebApp'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '**/AvansMaaltijdreservering.WebApp.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/WebApp'
      zipAfterPublish: true

  - task: DotNetCoreCLI@2
    displayName: 'Publish API'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '**/AvansMaaltijdreservering.API.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/API'
      zipAfterPublish: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'