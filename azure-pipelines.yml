# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '9.x'

- task: DotNetCoreCLI@2
  displayName: 'Create tool manifest'
  inputs:
    command: 'custom'
    custom: 'new'
    arguments: 'tool-manifest'

- task: DotNetCoreCLI@2
  displayName: 'Restore packages'
  inputs:
    command: 'restore'
    projects: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'Install EF Core tools'
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install dotnet-ef'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build --collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: 'Publish WebApp'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/AvansMaaltijdreservering.WebApp.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/WebApp'
    zipAfterPublish: true

- task: DotNetCoreCLI@2
  displayName: 'Publish API'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/AvansMaaltijdreservering.API.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/API'
    zipAfterPublish: true

- task: DotNetCoreCLI@2
  displayName: 'Create EF migrations bundle'
  inputs:
    command: 'custom'
    custom: 'ef'
    arguments: 'migrations bundle --self-contained -s $(Build.SourcesDirectory)/AvansMaaltijdreservering.API -p $(Build.SourcesDirectory)/AvansMaaltijdreservering.API -o $(Build.SourcesDirectory)/AvansMaaltijdreservering.API/migration_bundle/bundle'

- task: CmdLine@2
  displayName: 'Copy appsettings.json to migration bundle'
  inputs:
    script: 'cp AvansMaaltijdreservering.API/appsettings.json AvansMaaltijdreservering.API/migration_bundle/'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'

- task: PublishPipelineArtifact@1
  displayName: 'Publish EF Migrations Bundle'
  inputs:
    targetPath: 'AvansMaaltijdreservering.API/migration_bundle'
    artifact: 'EfMigrationsBundle'
    publishLocation: 'pipeline'