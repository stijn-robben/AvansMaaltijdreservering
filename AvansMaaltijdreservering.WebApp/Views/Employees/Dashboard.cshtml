@model AvansMaaltijdreservering.WebApp.ViewModels.Employees.EmployeeDashboardViewModel
@{
    ViewData["Title"] = "Employee Dashboard";
}

<div class="container-fluid mt-4">
    <!-- Welcome Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="bg-warning text-dark p-4 rounded-3 shadow-sm">
                <div class="row align-items-center">
                    <div class="col-md-8">
                        <h1 class="h2 mb-1"><i class="bi bi-briefcase-fill"></i> Welcome, @Model.Employee.Name!</h1>
                        <p class="mb-0">
                            <i class="bi bi-building"></i> @Model.EmployeeCanteen?.Location.ToString().Replace("_", " ") ‚Ä¢ 
                            <i class="bi bi-badge-ad"></i> @Model.Employee.EmployeeNumber ‚Ä¢
                            <i class="bi bi-geo-alt"></i> @Model.EmployeeCanteen?.City
                        </p>
                    </div>
                    <div class="col-md-4 text-md-end">
                        <a asp-action="CreatePackage" class="btn btn-success btn-lg">
                            <i class="bi bi-plus-circle-fill"></i> Create Package
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- US_02: Own Canteen Packages -->
    <div class="row mb-5">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="bi bi-house-fill"></i> Your Canteen Packages (@Model.OwnCanteenPackages.Count)
                        <small class="opacity-75">- @Model.EmployeeCanteen?.Location.ToString().Replace("_", " ")</small>
                    </h4>
                </div>
                <div class="card-body">
                    @if (!Model.OwnCanteenPackages.Any())
                    {
                        <div class="text-center py-4">
                            <div class="display-1 text-muted mb-3">üì¶</div>
                            <h5 class="text-muted">No packages created yet</h5>
                            <p class="text-muted">Start reducing food waste by creating your first package!</p>
                            <a asp-action="CreatePackage" class="btn btn-success">
                                <i class="bi bi-plus-circle"></i> Create First Package
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Package</th>
                                        <th>Pickup Time</th>
                                        <th>Price</th>
                                        <th>Type</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var package in Model.OwnCanteenPackages)
                                    {
                                        var isPastDue = package.LatestPickupTime < DateTime.Now;
                                        var isToday = package.PickupTime.Date == DateTime.Today;
                                        
                                        <tr class="@(isPastDue ? "table-danger" : isToday ? "table-warning" : "")">
                                            <td>
                                                <strong>@package.Name</strong>
                                                @if (package.ContainsAlcohol())
                                                {
                                                    <span class="badge bg-warning text-dark ms-1">üîû 18+</span>
                                                }
                                                <br>
                                                <small class="text-muted">@package.Products.Count() products</small>
                                            </td>
                                            <td>
                                                <strong class="@(isToday ? "text-warning" : "")">
                                                    @package.PickupTime.ToString("ddd dd MMM, HH:mm")
                                                </strong>
                                                <br>
                                                <small class="text-muted">Latest: @package.LatestPickupTime.ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                <span class="h6 text-success">‚Ç¨@package.Price.ToString("0.00")</span>
                                            </td>
                                            <td>
                                                @switch (package.MealType)
                                                {
                                                    case AvansMaaltijdreservering.Core.Domain.Enums.MealType.Bread:
                                                        <text>üçû Bread</text>
                                                        break;
                                                    case AvansMaaltijdreservering.Core.Domain.Enums.MealType.WarmEveningMeal:
                                                        <text>üçΩÔ∏è Warm Meal</text>
                                                        break;
                                                    case AvansMaaltijdreservering.Core.Domain.Enums.MealType.Drink:
                                                        <text>ü•§ Drinks</text>
                                                        break;
                                                    case AvansMaaltijdreservering.Core.Domain.Enums.MealType.Snack:
                                                        <text>üçø Snacks</text>
                                                        break;
                                                    case AvansMaaltijdreservering.Core.Domain.Enums.MealType.Lunch:
                                                        <text>ü•™ Lunch</text>
                                                        break;
                                                    case AvansMaaltijdreservering.Core.Domain.Enums.MealType.Breakfast:
                                                        <text>ü•ê Breakfast</text>
                                                        break;
                                                }
                                            </td>
                                            <td>
                                                @if (isPastDue)
                                                {
                                                    <span class="badge bg-danger">Expired</span>
                                                }
                                                else if (package.IsReserved)
                                                {
                                                    <span class="badge bg-success">Reserved</span>
                                                    <br>
                                                    <small class="text-muted">by @package.ReservedByStudent?.Name</small>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-primary">Available</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group-vertical btn-group-sm">
                                                    @if (!package.IsReserved && !isPastDue)
                                                    {
                                                        <a asp-action="EditPackage" asp-route-id="@package.Id" class="btn btn-outline-primary btn-sm">
                                                            <i class="bi bi-pencil"></i> Edit
                                                        </a>
                                                        <form asp-action="DeletePackage" method="post" class="d-inline">
                                                            <input type="hidden" name="id" value="@package.Id" />
                                                            <button type="submit" class="btn btn-outline-danger btn-sm w-100" 
                                                                    onclick="return confirm('Are you sure you want to delete this package?')">
                                                                <i class="bi bi-trash"></i> Delete
                                                            </button>
                                                        </form>
                                                    }
                                                    @if (package.IsReserved && isPastDue)
                                                    {
                                                        <form asp-action="RegisterNoShow" method="post" class="d-inline">
                                                            <input type="hidden" name="packageId" value="@package.Id" />
                                                            <button type="submit" class="btn btn-warning btn-sm" 
                                                                    onclick="return confirm('Register this as a no-show? This will increment the student\\'s no-show count.')">
                                                                <i class="bi bi-exclamation-triangle"></i> No-Show
                                                            </button>
                                                        </form>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- US_02: All Canteens Overview -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h4 class="mb-0">
                        <i class="bi bi-buildings"></i> All Canteens Overview (@Model.AllPackages.Count)
                        <small class="opacity-75">- System-wide package status</small>
                    </h4>
                </div>
                <div class="card-body">
                    @if (!Model.AllPackages.Any())
                    {
                        <div class="text-center py-4">
                            <div class="display-1 text-muted mb-3">üè¢</div>
                            <h5 class="text-muted">No packages in the system</h5>
                            <p class="text-muted">Be the first to create a package and start reducing food waste!</p>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-sm table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Location</th>
                                        <th>Package</th>
                                        <th>Pickup</th>
                                        <th>Price</th>
                                        <th>Status</th>
                                        <th>Reserved By</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var package in Model.AllPackages.Take(20)) // Limit to 20 for performance
                                    {
                                        var isPastDue = package.LatestPickupTime < DateTime.Now;
                                        var isToday = package.PickupTime.Date == DateTime.Today;
                                        var isOwnCanteen = package.CanteenId == Model.Employee.CanteenId;
                                        
                                        <tr class="@(isOwnCanteen ? "table-primary" : "") @(isPastDue ? "opacity-50" : "")">
                                            <td>
                                                <strong class="@(isOwnCanteen ? "text-primary" : "")">
                                                    @if (isOwnCanteen)
                                                    {
                                                        <i class="bi bi-house-fill"></i>
                                                    }
                                                    @package.City
                                                </strong>
                                                <br>
                                                <small class="text-muted">@package.CanteenLocation.ToString().Replace("_", " ")</small>
                                            </td>
                                            <td>
                                                <strong>@package.Name</strong>
                                                @if (package.ContainsAlcohol())
                                                {
                                                    <span class="badge bg-warning text-dark ms-1">üîû</span>
                                                }
                                                <br>
                                                <small class="text-muted">
                                                    @switch (package.MealType)
                                                    {
                                                        case AvansMaaltijdreservering.Core.Domain.Enums.MealType.Bread:
                                                            <text>üçû Bread</text>
                                                            break;
                                                        case AvansMaaltijdreservering.Core.Domain.Enums.MealType.WarmEveningMeal:
                                                            <text>üçΩÔ∏è Warm Meal</text>
                                                            break;
                                                        case AvansMaaltijdreservering.Core.Domain.Enums.MealType.Drink:
                                                            <text>ü•§ Drinks</text>
                                                            break;
                                                        case AvansMaaltijdreservering.Core.Domain.Enums.MealType.Snack:
                                                            <text>üçø Snacks</text>
                                                            break;
                                                        case AvansMaaltijdreservering.Core.Domain.Enums.MealType.Lunch:
                                                            <text>ü•™ Lunch</text>
                                                            break;
                                                        case AvansMaaltijdreservering.Core.Domain.Enums.MealType.Breakfast:
                                                            <text>ü•ê Breakfast</text>
                                                            break;
                                                    }
                                                </small>
                                            </td>
                                            <td>
                                                <strong class="@(isToday ? "text-warning" : "")">
                                                    @package.PickupTime.ToString("dd MMM, HH:mm")
                                                </strong>
                                            </td>
                                            <td>
                                                <span class="text-success">‚Ç¨@package.Price.ToString("0.00")</span>
                                            </td>
                                            <td>
                                                @if (isPastDue)
                                                {
                                                    <span class="badge bg-secondary">Expired</span>
                                                }
                                                else if (package.IsReserved)
                                                {
                                                    <span class="badge bg-success">Reserved</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-primary">Available</span>
                                                }
                                            </td>
                                            <td>
                                                @if (package.IsReserved)
                                                {
                                                    <strong>@package.ReservedByStudent?.Name</strong>
                                                    <br>
                                                    <small class="text-muted">@package.ReservedByStudent?.StudentNumber</small>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            
                            @if (Model.AllPackages.Count > 20)
                            {
                                <div class="text-center mt-3">
                                    <small class="text-muted">Showing latest 20 packages. Total packages in system: @Model.AllPackages.Count</small>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .btn-group-vertical .btn {
        margin-bottom: 2px;
    }
    .table-primary {
        background-color: rgba(13, 110, 253, 0.1);
    }
</style>