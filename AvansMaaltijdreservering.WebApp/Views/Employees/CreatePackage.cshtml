@model AvansMaaltijdreservering.WebApp.ViewModels.Employees.CreatePackageViewModel
@{
    ViewData["Title"] = "Create Package";
}

<div class="container mt-4">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Dashboard">Dashboard</a></li>
            <li class="breadcrumb-item active">Create Package</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h3 class="mb-0">
                        <i class="bi bi-plus-circle-fill"></i> Create New Package
                    </h3>
                    <p class="mb-0 opacity-75">Help reduce food waste by creating a rescue package</p>
                </div>
                <div class="card-body">
                    <form asp-action="CreatePackage" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                        
                        <!-- Package Basic Info -->
                        <h5 class="mb-3"><i class="bi bi-box2"></i> Package Information</h5>
                        
                        <div class="row mb-3">
                            <div class="col-md-8">
                                <label asp-for="Name" class="form-label">Package Name *</label>
                                <input asp-for="Name" class="form-control" placeholder="e.g., Fresh Bread Selection, Evening Meal Deal" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="Price" class="form-label">Price (‚Ç¨) *</label>
                                <input asp-for="Price" class="form-control" placeholder="0.00" step="0.01" />
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Location & Time -->
                        <h5 class="mb-3"><i class="bi bi-geo-alt"></i> Location & Timing</h5>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="City" class="form-label">City</label>
                                <select asp-for="City" class="form-select">
                                    <option value="0">Breda</option>
                                    <option value="1">Tilburg</option>
                                    <option value="2">Den Bosch</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="CanteenLocation" class="form-label">Canteen Location</label>
                                <select asp-for="CanteenLocation" class="form-select">
                                    <option value="0">Breda - LA Building</option>
                                    <option value="1">Breda - LD Building</option>
                                    <option value="2">Breda - HA Building</option>
                                    <option value="3">Den Bosch Building</option>
                                    <option value="4">Tilburg Building</option>
                                </select>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="PickupTime" class="form-label">Pickup Time *</label>
                                <input asp-for="PickupTime" class="form-control" type="datetime-local" />
                                <small class="form-text text-muted">Maximum 2 days ahead</small>
                                <span asp-validation-for="PickupTime" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="LatestPickupTime" class="form-label">Latest Pickup Time *</label>
                                <input asp-for="LatestPickupTime" class="form-control" type="datetime-local" />
                                <small class="form-text text-muted">Final pickup deadline</small>
                                <span asp-validation-for="LatestPickupTime" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Meal Type -->
                        <h5 class="mb-3"><i class="bi bi-cup-hot"></i> Meal Category</h5>
                        
                        <div class="mb-3">
                            <label asp-for="MealType" class="form-label">Meal Type</label>
                            <select asp-for="MealType" class="form-select" id="mealTypeSelect">
                                <option value="0">üçû Bread & Bakery</option>
                                <option value="1" id="warmMealOption">üçΩÔ∏è Warm Evening Meal</option>
                                <option value="2">ü•§ Beverages</option>
                                <option value="3">üçø Snacks</option>
                                <option value="4">ü•™ Lunch</option>
                                <option value="5">ü•ê Breakfast</option>
                            </select>
                            <span asp-validation-for="MealType" class="text-danger"></span>
                            <div id="warmMealWarning" class="alert alert-warning mt-2" style="display: none;">
                                <i class="bi bi-exclamation-triangle"></i>
                                <strong>US_09 Notice:</strong> Warm evening meals can only be served at locations with kitchen facilities 
                                (Breda LA Building, Den Bosch Building, Tilburg Building).
                            </div>
                        </div>

                        <!-- US_06: Product Selection -->
                        <h5 class="mb-3"><i class="bi bi-list-ul"></i> Example Products</h5>
                        
                        <div class="mb-3">
                            <p class="text-muted mb-3">
                                <i class="bi bi-info-circle"></i> 
                                Select products that students might expect in this package. 
                                <strong>Note:</strong> These are examples only - actual contents may vary.
                            </p>
                            
                            @if (Model.AvailableProducts.Any())
                            {
                                <div class="row">
                                    @foreach (var product in Model.AvailableProducts)
                                    {
                                        <div class="col-md-4 col-sm-6 mb-2">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" name="SelectedProductIds" 
                                                       value="@product.Id" id="product_@product.Id" />
                                                <label class="form-check-label" for="product_@product.Id">
                                                    @if (product.ContainsAlcohol)
                                                    {
                                                        <span class="text-warning">üç∑</span>
                                                    }
                                                    @product.Name
                                                    @if (product.ContainsAlcohol)
                                                    {
                                                        <small class="badge bg-warning text-dark">18+</small>
                                                    }
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>
                                
                                <div class="alert alert-info mt-3">
                                    <i class="bi bi-lightbulb"></i>
                                    <strong>Auto 18+ Detection:</strong> If you select any alcoholic products, 
                                    this package will automatically be marked as 18+ only.
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    <i class="bi bi-exclamation-triangle"></i>
                                    No products available. Contact your system administrator to add products first.
                                </div>
                            }
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a asp-action="Dashboard" class="btn btn-outline-secondary me-md-2">
                                <i class="bi bi-arrow-left"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-check-lg"></i> Create Package
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Sidebar with Guidelines -->
        <div class="col-lg-4">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="bi bi-lightbulb"></i> Creation Guidelines</h5>
                </div>
                <div class="card-body">
                    <h6><i class="bi bi-calendar-check"></i> Timing Rules</h6>
                    <ul class="list-unstyled mb-3">
                        <li>‚úÖ Maximum 2 days ahead</li>
                        <li>‚úÖ Pickup time must be in the future</li>
                        <li>‚úÖ Latest pickup > pickup time</li>
                    </ul>

                    <h6><i class="bi bi-shield-check"></i> Business Rules</h6>
                    <ul class="list-unstyled mb-3">
                        <li>‚úÖ Only your canteen location</li>
                        <li>‚úÖ Auto 18+ for alcohol products</li>
                        <li>‚úÖ Warm meals only at equipped locations</li>
                    </ul>

                    <h6><i class="bi bi-people"></i> Student Impact</h6>
                    <ul class="list-unstyled mb-3">
                        <li>üå± Reduces food waste</li>
                        <li>üí∞ Saves student money</li>
                        <li>üåç Helps environment</li>
                        <li>üìö Supports student life</li>
                    </ul>
                </div>
            </div>

            <div class="card shadow mt-4">
                <div class="card-header bg-warning text-dark">
                    <h6 class="mb-0"><i class="bi bi-exclamation-triangle"></i> Important Notes</h6>
                </div>
                <div class="card-body">
                    <p class="mb-2"><strong>After Creation:</strong></p>
                    <ul class="list-unstyled">
                        <li>‚Ä¢ Package becomes immediately available</li>
                        <li>‚Ä¢ Students can reserve it first-come-first-served</li>
                        <li>‚Ä¢ You can edit/delete until someone reserves it</li>
                        <li>‚Ä¢ Reserved packages cannot be modified</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // US_09: Show warning for warm meal locations that don't serve them
        document.addEventListener('DOMContentLoaded', function() {
            const mealTypeSelect = document.getElementById('mealTypeSelect');
            const canteenLocationSelect = document.querySelector('select[name="CanteenLocation"]');
            const warmMealWarning = document.getElementById('warmMealWarning');
            const warmMealOption = document.getElementById('warmMealOption');

            function checkWarmMealRestriction() {
                const selectedMealType = mealTypeSelect.value;
                const selectedLocation = canteenLocationSelect.value;
                
                // Warm evening meal = 1, restricted locations: LD Building (1), HA Building (2), Tilburg Building (4)
                if (selectedMealType === '1') {
                    if (selectedLocation === '1' || selectedLocation === '2' || selectedLocation === '4') {
                        warmMealWarning.style.display = 'block';
                        warmMealWarning.innerHTML = '<i class="bi bi-exclamation-triangle"></i> ' +
                            '<strong>Invalid Combination:</strong> This location does not serve warm meals. ' +
                            'Please select a different meal type or location.';
                        warmMealWarning.className = 'alert alert-danger mt-2';
                    } else {
                        warmMealWarning.style.display = 'block';
                        warmMealWarning.innerHTML = '<i class="bi bi-check-circle"></i> ' +
                            '<strong>Valid Location:</strong> This location can serve warm evening meals.';
                        warmMealWarning.className = 'alert alert-success mt-2';
                    }
                } else {
                    warmMealWarning.style.display = 'none';
                }
            }

            mealTypeSelect.addEventListener('change', checkWarmMealRestriction);
            canteenLocationSelect.addEventListener('change', checkWarmMealRestriction);
        });

        // Set default values
        document.addEventListener('DOMContentLoaded', function() {
            // Set default pickup time to tomorrow at noon
            const tomorrow = new Date();
            tomorrow.setDate(tomorrow.getDate() + 1);
            tomorrow.setHours(12, 0, 0, 0);
            
            const pickupTimeInput = document.querySelector('input[name="PickupTime"]');
            if (pickupTimeInput && !pickupTimeInput.value) {
                pickupTimeInput.value = tomorrow.toISOString().slice(0, 16);
            }
            
            // Set default latest pickup time to 2 hours later
            const latestPickup = new Date(tomorrow);
            latestPickup.setHours(14, 0, 0, 0);
            
            const latestPickupInput = document.querySelector('input[name="LatestPickupTime"]');
            if (latestPickupInput && !latestPickupInput.value) {
                latestPickupInput.value = latestPickup.toISOString().slice(0, 16);
            }
        });
    </script>
}